openapi: 3.0.0
info:
  title: API de Predicción de LaLiga
  description: API para gestionar y predecir los resultados de los partidos de LaLiga y observar datos históricos
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Servidor local

components:
  schemas:
    Usuario:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string
    Partido:
      type: object
      properties:
        id:
          type: string
        fecha:
          type: string
          format: date-time
        equipoCasa:
          type: string
        equipoVisitante:
          type: string
        golesCasa:
          type: integer
        golesVisitante:
          type: integer
        estado:
          type: string
        estadisticas:
          type: object
    Prediccion:
      type: object
      properties:
        partidoId:
          type: string
        resultadoPredicho:
          type: string
    Equipo:
      type: object
      properties:
        id:
          type: string
        nombre:
          type: string
        logo:
          type: string
    Jugador:
      type: object
      properties:
        id:
          type: string
        nombre:
          type: string
        equipoId:
          type: string

paths:
  /usuarios/registro:
    post:
      summary: Registrar un nuevo usuario
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        '201':
          description: Usuario registrado exitosamente
  /usuarios/login:
    post:
      summary: Iniciar sesión de usuario
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Usuario autenticado exitosamente
  /partidos:
    get:
      summary: Obtener todos los partidos
      responses:
        '200':
          description: Lista de partidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Partido'
    post:
      summary: Añadir un nuevo partido
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Partido'
      responses:
        '201':
          description: Partido creado exitosamente
  /partidos/{id}:
    get:
      summary: Obtener un partido específico por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detalles del partido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partido'
    put:
      summary: Actualizar un partido
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Partido'
      responses:
        '200':
          description: Partido actualizado exitosamente
    delete:
      summary: Eliminar un partido
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Partido eliminado exitosamente
  /partidos/{id}/estadisticas:
    get:
      summary: Obtener estadísticas de un partido específico por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Estadísticas del partido
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  estadisticas:
                    type: object
  /predicciones:
    post:
      summary: Obtener predicción para un partido
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                partidoId:
                  type: string
      responses:
        '200':
          description: Resultado de la predicción
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prediccion'
  /equipos:
    get:
      summary: Obtener todos los equipos
      responses:
        '200':
          description: Lista de equipos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Equipo'
    post:
      summary: Añadir un nuevo equipo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Equipo'
      responses:
        '201':
          description: Equipo creado exitosamente
  /equipos/{id}:
    get:
      summary: Obtener un equipo específico por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detalles del equipo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equipo'
    put:
      summary: Actualizar un equipo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Equipo'
      responses:
        '200':
          description: Equipo actualizado exitosamente
    delete:
      summary: Eliminar un equipo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Equipo eliminado exitosamente
  /jugadores:
    get:
      summary: Obtener todos los jugadores
      responses:
        '200':
          description: Lista de jugadores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Jugador'
    post:
      summary: Añadir un nuevo jugador
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Jugador'
      responses:
        '201':
          description: Jugador creado exitosamente
  /jugadores/{id}:
    get:
      summary: Obtener un jugador específico por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detalles del jugador
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Jugador'
    put:
      summary: Actualizar un jugador
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Jugador'
      responses:
        '200':
          description: Jugador actualizado exitosamente
    delete:
      summary: Eliminar un jugador
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Jugador eliminado exitosamente
