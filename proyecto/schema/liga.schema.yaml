openapi: 3.0.0
info:
  title: LaLiga Prediction API
  description: API for managing and predicting LaLiga match results.
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local server

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string
    Match:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        teamHome:
          type: string
        teamAway:
          type: string
        scoreHome:
          type: integer
        scoreAway:
          type: integer
        status:
          type: string
        stats:
          type: object
    Prediction:
      type: object
      properties:
        matchId:
          type: string
        predictedResult:
          type: string

paths:
  /users/register:
    post:
      summary: Register a new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User registered successfully
  /users/login:
    post:
      summary: User login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User logged in successfully
  /matches:
    get:
      summary: Get all matches
      responses:
        '200':
          description: List of matches
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Match'
    post:
      summary: Add a new match
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Match'
      responses:
        '201':
          description: Match created successfully
  /matches/{id}:
    get:
      summary: Get a specific match by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Match details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
    put:
      summary: Update a match
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Match'
      responses:
        '200':
          description: Match updated successfully
    delete:
      summary: Delete a match
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Match deleted successfully
  /predictions:
    post:
      summary: Get prediction for a match
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                matchId:
                  type: string
      responses:
        '200':
          description: Prediction result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prediction'
  /teams:
    get:
      summary: Get all teams
      responses:
        '200':
          description: List of teams
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    logo:
                      type: string
    post:
      summary: Add a new team
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                logo:
                  type: string
      responses:
        '201':
          description: Team created successfully
  /teams/{id}:
    get:
      summary: Get a specific team by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Team details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  logo:
                    type: string
    put:
      summary: Update a team
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                logo:
                  type: string
      responses:
        '200':
          description: Team updated successfully
    delete:
      summary: Delete a team
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Team deleted successfully
  /players:
    get:
      summary: Get all players
      responses:
        '200':
          description: List of players
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    teamId:
                      type: string
    post:
      summary: Add a new player
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                teamId:
                  type: string
      responses:
        '201':
          description: Player created successfully
  /players/{id}:
    get:
      summary: Get a specific player by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Player details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  teamId:
                    type: string
    put:
      summary: Update a player
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                teamId:
                  type: string
      responses:
        '200':
          description: Player updated successfully
    delete:
      summary: Delete a player
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Player deleted successfully
